Why does this document exist?
I've had many friends, coworkers, acquaintances, and random denizens of various social media communities express interest in learning more about how to either become a data scientist or learn data science related skills they could apply to whatever projects they're working on. I created this document to throw a much of the ideas in one place and am sharing it on Github for anyone to access.

General Skills
Productive in using some programming language to automate data flows
Productive in using statistics to separate signal from noise
Understanding of how to answer business questions, probably in a self-directed way
Creativity - there is seldom a "right" way to do things and multiple approaches can be combined
Free video series for learning Data Science related concepts
Most recommend:
JMP Statistical Thinking - from JMP, which is owned by SAS, a free course with a lot of good functional information on statistics. They're trying to sell you the JMP software, but that software is not required to understand the course.
3Blue1Brown - A YouTube Channel that talks about math generally, and has a lot of great information on Linear Algebra, Statistics, and Calculus.
Crash Course - Statistics - A YouTube playlist by the channel Crash Course with undergraduate-level statistics explained in an approachable way.
StatQuest with Josh Starmer - A YouTube channel with a lot of great information on statistics and machine learning. He is a little goofy (and takes pride in it), but his information and explanations are great.
Steve Brunton - A YouTube channel by an Associate Professor at University of Washington. Unlike a lot of academic sources that are unedited 50 minute videos of lectures, Steve's videos are well edited and clearly written with the intention of being viewed as videos. He talks a lot about various subjects related to data science and will even walk through code in python and matlab.
Also useful, but wouldn't focus on:
The Bright Side of Mathematics - A YouTube channel with a lot of great information on the foundations of a lot of math that is hard to get elsewhere. Fairly academic.
Brian Douglas - A YouTube channel about control theory, which is related to dynamical systems. Not data science explicitly, but there's a lot of untapped overlap in the disciplines.
Numberphile - A YouTube channel about pop math.
PBS Infinite Series - A YouTube channel about pop math that was unfortunately discontinued.
Software/programming languages to learn:
Main programming languages:
Python (roughly in order of usefulness)
Anaconda is one of the more common ways to use python using jupyter notebooks (this document is a jupyter notebook!), though dozens of IDEs exist to support python. Anaconda automatically installs a lot of great libraries
Numpy - library with most of the math functions you'll ever need in it
Pandas - library with dataframes, which are the most common way to handle large amounts of data in python
Matplotlib / Seaborn - libraries for graphing/visualization of data, which you should always do
Statsmodels - library with for various regression techniques and often outputs a lot of great statistical information (AIC/BIC are right there!)
Scipy - library with a lot of statistical and machine learning algorithms built in
Tensorflow (Keras) / Pytorch - library with a lot of the heavier duty machine learning algorithms built in, you interface with them similar to scipy so if you know scipy, you can figure these out
Surprise - library helpful in building recommendation algorithms
R
If you know python, you don't really need R, and vice-versa
RStudio and jupyter notebooks are good ways to use R
SQL
In its various flavors, SQL vital for querying and obtaining data from databases, and writing back to them
Python vs. R
Both are widely used
Both have availability of a large number of statistics and machine learning libraries
Python tends to be favored in industry, in part because it's easier to put into production in general
R tends to be favored more in academia
Languages to be aware of and may be/become relevant, but also may not:
SAS
Julia
Javascript
Java
Scala
Software for fast/ad-hoc analysis:
Excel
A lot of people use Excel poorly, which is a shame because Excel can do amazing things.
Excel (and Google Sheets) are ubiquitous, so there's a convenience factor with Excel.
Someone good with Excel can save themselves a lot of time, someone bad with it might waste an entire week of your time trying to unpack what they did.
JMP
Has a lot of great exploratory, visualization, statistical, and machine learning tools built in. I often use JMP to mock up a project before automating it in python.
There is an entry-level and pro tier. The pro tier has a lot more bells and whistles, but the entry-level tier has most of what you probably need
Minitab
Like JMP, but I find it less user friendly
SPSS
I don't have experience with, but am putting here for the sake of completeness
Software for visualization and dashboarding:
Tableau
Microsoft Power BI
Excel (but it's not designed for it)
Django, Flask, or javascript (if you feel you need fine control and can make a much larger time investment)
Other Software that gets thrown around:
Depending on what specifically you want to do, these may or may not be helpful to you.

SQL databases like Snowflake, Oracle, Microsoft SQL, SQLite, PostgreSQL, etc.
NoSQL databases like MongoDB or Cassandra
Cloud services like AWS, Azure, Google Cloud, etc.
Big Data software like Amazon Sagemaker, Hadoop, Spark, etc.
Roles doing data science
Suppose you want a job doing data science, how does that go?

Job Descriptions
A lot of job descriptions in data science involve a laundry list of every skill under the sun. It's not rare for job descriptions to ask for more years of experience with a technology than years that technology has existed. There are roles that ask for experience or "technical competence" with a piece of software that filter out the person who wrote that software! Join a LinkedIn group for data science and you'll see at least one example of each of these a week.

There are also reasonable job descriptions that are well thought out for what a company needs. Focus on those.

Job Titles
There is no industry standardization around what is and what is not data science. As such, there are a lot of overlap with the titles:

Data Scientist
Research Scientist
Data Engineer
Data Analyst
Business Analyst
Business Intelligence Whatever
Machine Learning Engineer
Statistician
Actuary
Person of Data Expertise
Other titles too, the perils of no standardization
With the exception of Actuary, there are no (at the time of writing) certifying boards for these roles. Some companies happily take your money for a certification, but it's rare a company hiring will explicitly ask for one. There are some pedantic and superficial differences between some of these titles and they might be asked to do different things, but they all fall into a class of Analytics Professionals.

Data Engineers might be more aligned with Software Engineers, you might find Research Scientists in the physical sciences (like a chemist), and one company's Data Scientist is another's Data Analyst. These fields are (again at the time or writing) not standardized and it's muddy.

Education
Data science is a new enough field where academic degrees in the field are not as widely available as those in engineering, computer science, statistics, economics, etc. They are becoming more common.

Many positions will either require or prefer candidates with a PhD or Master's over a Bachelor's. It's exceedingly rare to see them asking for an Associate's or a High School Diploma. Whether or not these requirements make sense is an open question.

The higher degree requirement is fluid depending on the company and the hiring manager. One way to think about it is a Master's might be equivalent to a Bachelor's with 2-4 years experience, and a PhD a Bachelor's with 4-6. For example, you might see fresh PhDs being offered "Senior" in front of their job title. Others will argue that Data Scientist is not an entry level position. Be prepared for a heavy-tailed distribution (-insert kurtosis joke here-) of opinions on the subject of education.

Data science bootcamps and non-academic "fellowships" exist. I've never heard a hiring manager ask for one of these or read a job posting with these listed anywhere in the description. If you have disposable money and are in a hurry to obtain skills they might be fine to look at, but subscriptions to Linkedin Learning, Skillshare, Brilliant, Udemy, etc. are not expensive. YouTube is free with ads.

Job Prospects
Every time I'm involved in a hiring project the complaint arises that there aren't enough qualified candidates. Every time I'm involved in job hunting I get radio silence from jobs where I check all their job description's qualifications.

Hiring managers would often find it useful to be less specific on title and education. Candidates for those positions would find it useful to know that these postings often get in the multiple-hundreds of job applications, so hiring managers tend to triage based on title and education. This disconnect makes neither the hiring managers or candidates happy.
